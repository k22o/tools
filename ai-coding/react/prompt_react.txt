# React UIコンポーネント作成プロンプト

## 基本プロンプト

以下の要件に基づいて、ReactのUIコンポーネントを作成してください：

### 要件
- **コンポーネント名**: [コンポーネント名を指定]
- **機能**: [コンポーネントの機能を詳細に説明]
- **props**: [必要なpropsとその型を指定]
- **スタイリング**: [CSSフレームワークやスタイリング方法を指定]
- **アクセシビリティ**: [アクセシビリティ要件があれば指定]

### 出力形式
1. **TypeScript型定義**（propsの型定義）
2. **Reactコンポーネント本体**
3. **CSS/スタイリング**
4. **使用例**
5. **注意事項**

### 品質要件
- TypeScriptを使用
- 関数コンポーネント（React Hooks）
- 適切なエラーハンドリング
- レスポンシブデザイン対応
- アクセシビリティ配慮
- パフォーマンス最適化

---

## 特殊要件プロンプト

### フォームコンポーネント
```
フォームコンポーネントを作成してください：
- バリデーション機能
- エラー表示
- フォーカス管理
- キーボードナビゲーション
```

### データ表示コンポーネント
```
データ表示コンポーネントを作成してください：
- ページネーション
- ソート機能
- フィルタリング
- ローディング状態
- エラー状態
```

### モーダル/ダイアログ
```
モーダルコンポーネントを作成してください：
- フォーカストラップ
- キーボード操作（ESCで閉じる）
- オーバーレイクリックで閉じる
- アニメーション
```

---

## ベストプラクティス

### コード品質
- ESLint/Prettier準拠
- 適切なコメント
- 意味のある変数名
- 単一責任の原則

### パフォーマンス
- React.memoの適切な使用
- useCallback/useMemoの活用
- 不要な再レンダリングの回避

### テスト
- ユニットテストの作成
- スナップショットテスト
- ユーザーインタラクションテスト

### ドキュメント
- JSDocコメント
- Storybook対応
- 使用例の提供

---

## 注意事項

1. **ブラウザ互換性**: 対象ブラウザを考慮
2. **バンドルサイズ**: 依存関係の最小化
3. **セキュリティ**: XSS対策、入力値のサニタイズ
4. **国際化**: 多言語対応の考慮
5. **テーマ**: ダークモード対応の考慮

このプロンプトを使用して、高品質なReact UIコンポーネントを作成してください。 
