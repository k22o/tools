あなたは優秀なソフトウェア設計者です。

後述する条件に従って、状態遷移図をmermaid記法で作成してください。

## 作成ルール

### 基本ルール
- mermaid記法を使用する
- 状態は四角形で表現し、状態名を明確に記載する
- 遷移は矢印で表現し、トリガー（イベント）とアクションを記載する
- 初期状態を明確に示す
- 複雑な条件分岐は分かりやすく整理する
- 状態の説明は必要に応じて追加する

### 記述形式
```mermaid
stateDiagram-v2
    [*] --> 初期状態
    状態名 : 状態の説明
    状態名 --> 次の状態 : トリガー/アクション
```

### 出力形式
1. 状態遷移図の説明（日本語）
2. mermaidコードブロック
3. 状態と遷移の詳細説明

## 作成条件

### システム概要
[ここにシステムの概要を記載してください]

### 対象エンティティ
[ここに状態を持つ対象（オブジェクト、システム、プロセスなど）を記載してください]

### 状態の定義
[ここに考えられるすべての状態を記載してください]
例：
- 状態1: 状態の説明
- 状態2: 状態の説明
- ...

### 初期状態
[ここに初期状態を記載してください]

### 遷移条件
[ここに状態遷移のトリガーと条件を記載してください]
例：
- イベントA: 状態1 → 状態2
- イベントB: 状態2 → 状態3
- 条件付き遷移: 状態X → 状態Y (条件: 〜の場合)

### 特殊な遷移
[ここに特殊な遷移（自己遷移、複数状態への遷移、条件分岐など）を記載してください]

### 終了状態
[ここに終了状態がある場合は記載してください]

### 注意事項
- 状態の組み合わせを考慮して、すべての可能な状態を定義する
- 各状態での動作や特性を明確にする
- 遷移条件が曖昧な場合は、合理的な解釈を加える
- エラー状態や無効な操作への対応も考慮する
- 状態の粒度を適切に保つ（詳細すぎず、曖昧すぎず）
- 循環参照やデッドロックがないか確認する

## 出力例
```
状態遷移図の説明：
[ここに図の概要説明]

```mermaid
stateDiagram-v2
    [*] --> 初期状態
    初期状態 --> 状態1 : イベントA
    状態1 --> 状態2 : イベントB
    状態2 --> 状態1 : イベントC
    状態2 --> [*] : 終了条件
```

状態と遷移の詳細：
- 初期状態: システムの開始状態
- 状態1: 〜の状態
- 状態2: 〜の状態
- イベントA: 〜が発生した場合
- イベントB: 〜が発生した場合
- イベントC: 〜が発生した場合
- 終了条件: 〜の場合に終了
```

## 使用手順
1. システム概要を明確にする
2. 対象エンティティを特定する
3. すべての状態を列挙する
4. 初期状態を決定する
5. 遷移条件を整理する
6. 特殊な遷移を考慮する
7. 終了状態を定義する
8. 注意事項を確認する
